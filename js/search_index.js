var search_data = {"index":{"searchIndex":["stac","api","conformance","itemcollection","client","httpclient","itemsearch","conformances()","conforms_to?()","from_hash()","from_url()","get()","items()","new()","new()","new()","new()","pages()","post()","request()","to_h()","changelog","readme"],"longSearchIndex":["stac","stac::api","stac::api::conformance","stac::api::itemcollection","stac::client","stac::client::httpclient","stac::client::itemsearch","stac::client#conformances()","stac::client#conforms_to?()","stac::api::itemcollection::from_hash()","stac::client::from_url()","stac::client::httpclient#get()","stac::client::itemsearch#items()","stac::api::itemcollection::new()","stac::client::new()","stac::client::httpclient::new()","stac::client::itemsearch::new()","stac::client::itemsearch#pages()","stac::client::httpclient#post()","stac::client#request()","stac::api::itemcollection#to_h()","",""],"info":[["STAC","","STAC.html","",""],["STAC::API","","STAC/API.html","",""],["STAC::API::Conformance","","STAC/API/Conformance.html","",""],["STAC::API::ItemCollection","","STAC/API/ItemCollection.html","","<p>Represents STAC API - ItemCollection Fragment.\n"],["STAC::Client","","STAC/Client.html","","<p>Client for interacting with the root of a STAC API.\n"],["STAC::Client::HTTPClient","","STAC/Client/HTTPClient.html","","<p>A HTTP Client, wrapper of Faraday.\n"],["STAC::Client::ItemSearch","","STAC/Client/ItemSearch.html","","<p>Represents a deferred query to a STAC search endpoint as described in the STAC API - Item Search spec …\n"],["conformances","STAC::Client","STAC/Client.html#method-i-conformances","()","<p>Returns the value of “conformsTo” field.\n"],["conforms_to?","STAC::Client","STAC/Client.html#method-i-conforms_to-3F","(conformance)","<p>Returns wether the API conforms to the given standard.\n<p>The argument should be a constant of STAC::API::Conformance …\n"],["from_hash","STAC::API::ItemCollection","STAC/API/ItemCollection.html#method-c-from_hash","(hash)",""],["from_url","STAC::Client","STAC/Client.html#method-c-from_url","(url, params: {}, headers: {}, **http_options)","<p>Returns a Client instance from STAC API landing page URL.\n<p>Raises STAC::TypeError when the fetched JSON …\n"],["get","STAC::Client::HTTPClient","STAC/Client/HTTPClient.html#method-i-get","(url, params: {}, headers: {})","<p>Makes a HTTP GET request and returns the response body.\n"],["items","STAC::Client::ItemSearch","STAC/Client/ItemSearch.html#method-i-items","()","<p>Returns search results as Enumerator::Lazy of Item.\n"],["new","STAC::API::ItemCollection","STAC/API/ItemCollection.html#method-c-new","(features:, links: [], number_matched: nil, number_returned: nil, stac_extensions: nil, **extra)",""],["new","STAC::Client","STAC/Client.html#method-c-new","(catalog, http_client: HTTPClient.new)",""],["new","STAC::Client::HTTPClient","STAC/Client/HTTPClient.html#method-c-new","(**options)",""],["new","STAC::Client::ItemSearch","STAC/Client/ItemSearch.html#method-c-new","(client:, url:, method: 'GET', params: {}, headers: {})",""],["pages","STAC::Client::ItemSearch","STAC/Client/ItemSearch.html#method-i-pages","()","<p>Returns responses as Enumerator of ItemCollection by following next links automatically.\n"],["post","STAC::Client::HTTPClient","STAC/Client/HTTPClient.html#method-i-post","(url, params: {}, headers: {})","<p>Makes a HTTP POST request and returns the response body.\n"],["request","STAC::Client","STAC/Client.html#method-i-request","(url, method: 'GET', params: {}, headers: {})",""],["to_h","STAC::API::ItemCollection","STAC/API/ItemCollection.html#method-i-to_h","()",""],["CHANGELOG","","CHANGELOG_md.html","","<p>[Unreleased]\n<p>[0.1.0] - 2022-10-24\n<p>Initial release\n"],["README","","README_md.html","","<p>stac-client-ruby\n<p>A Ruby client for working with STAC Catalogs and API.\n<p>Installation\n"]]}}